
public class InsertionSort {

	public static void main(String[] args) {

		int[] unsortedArr = {9084, 25, 8760, 6079, 3429, 8176, 210, 8006, 9582, 1795, 947, 7151, 1826, 6952, 5876, 3503, 4655, 4525, 7252, 1642, 8525, 694, 1174, 4345, 772, 9544, 9439, 1998, 1838, 5883, 3513, 1413, 2526, 8725, 6234, 6647, 4924, 4531, 157, 6058, 4494, 5831, 9911, 4066, 5510, 3719, 6138, 649, 8317, 2653, 9570, 9836, 5143, 6832, 2393, 9918, 8957, 8250, 7126, 6199, 972, 2432, 8336, 6086, 1304, 9370, 6509, 2755, 3555, 6011, 9703, 3109, 3062, 9963, 7893, 7776, 5699, 7899, 6975, 9424, 7400, 8885, 5297, 6653, 3193, 9327, 7062, 3374, 6278, 7468, 2372, 8111, 3786, 3125, 7210, 7053, 5004, 5268, 442, 8937, 569, 9940, 4259, 1850, 5751, 5854, 2231, 1342, 8422, 9476, 5080, 8061, 9585, 5489, 1674, 7613, 1352, 6969, 6821, 3101, 4125, 7095, 1369, 7994, 9655, 4404, 477, 7787, 7280, 9593, 1963, 7429, 5544, 6648, 3870, 2090, 7394, 9870, 9762, 9061, 7955, 8773, 8942, 7784, 2910, 7961, 846, 349, 4731, 9272, 8077, 3135, 3499, 3484, 9936, 4684, 7372, 5145, 205, 4595, 9429, 7997, 3183, 8394, 8427, 1334, 925, 8611, 2869, 9898, 9596, 6809, 9409, 9478, 5046, 5298, 7270, 344, 9540, 6052, 5872, 1267, 7291, 7612, 4234, 7600, 8269, 5526, 8862, 9712, 9577, 9030, 6330, 8047, 9663, 993, 7438, 8189, 2027, 5474, 9571, 5418, 2382, 4218, 2876, 1714, 5156, 9781, 7193, 666, 4403, 7857, 2511, 9151, 7934, 8444, 3945, 8186, 6829, 8847, 5296, 7178, 109, 4236, 1589, 7131, 5335, 8610, 6254, 6287, 2064, 1038, 5280, 9648, 8063, 5172, 1569, 635, 5749, 478, 1972, 567, 7762, 5528, 2947, 7296, 7578, 4954, 9433, 8688, 1760, 7520, 9313, 8918, 8187, 4991, 2846, 8840, 5574, 6168, 1715, 1870, 7977, 9641, 2773, 576, 9741, 7050, 8339, 2702, 1314, 5035, 5744, 9235, 521, 4242, 5868, 2052, 6065, 5636, 8889, 1560, 1913, 9416, 7030, 7499, 92, 5274, 7632, 1967, 2234, 2291, 8863, 3239, 5591, 1022, 351, 8619, 9872, 2475, 7648, 3446, 1231, 474, 4326, 1010, 6954, 4747, 1730, 3156, 6246, 2991, 3679, 5678, 2740, 6974, 2051, 2262, 5458, 7156, 7733, 3396, 1179, 5217, 7504, 9507, 779, 677, 2487, 8120, 538, 1943, 5695, 637, 9049, 9986, 6656, 23, 4342, 5919, 4224, 1441, 7304, 1866, 8040, 4948, 9335, 689, 901, 2060, 390, 5192, 4212, 4876, 2276, 9550, 7215, 1436, 1657, 8743, 1854, 3915, 3215, 8048, 552, 982, 9946, 6544, 8906, 5513, 6310, 723, 9400, 6304, 9329, 6877, 5329, 4728, 1888, 7926, 1661, 6712, 3034, 1024, 8740, 9576, 1144, 1428, 5302, 3409, 8318, 3475, 85, 5344, 9325, 276, 415, 1197, 114, 3402, 5379, 1691, 7948, 6102, 8967, 7248, 8044, 1894, 8481, 2102, 812, 232, 1819, 1892, 3164, 6858, 7298, 8675, 1527, 3904, 3536, 3209, 8209, 5534, 8707, 2821, 8348, 9233, 2957, 9179, 4196, 24, 8393, 2806, 5707, 8397, 9446, 7159, 4905, 678, 3405, 9811, 136, 9237, 8589, 1030, 9000, 1868, 9609, 458, 7194, 4558, 2485, 2849, 1046, 9295, 3185, 6887, 867, 4131, 4797, 1745, 3036, 7295, 8689, 2848, 2503, 3541, 1116, 7091, 939, 5809, 5873, 971, 5853, 1557, 2966, 8600, 4211, 3767, 2719, 5558, 2532, 7338, 8385, 6594, 2020, 9100, 807, 9323, 793, 4611, 1085, 5222, 672, 8357, 8839, 7764, 2986, 8467   };
				
		int[] sortedArr = new int[unsortedArr.length];
		
		int temp1 = 0;
		int counter = 0;

		long time1;
		long time2;
		time1=System.nanoTime();
		for (int i = 0; i < unsortedArr.length; i++) {

			temp1 = unsortedArr[i];
			for (int j = 0; j < counter; j++) {
				if (temp1 < sortedArr[j]) {
					int temp2 = sortedArr[j];
					sortedArr[j] = temp1;
					temp1 = temp2;
				}

			}
			sortedArr[i] = temp1;
			counter++;
		}
		System.out.print("[ ");
		for (int i = 0; i < sortedArr.length; i++) {
			System.out.print(sortedArr[i] + " ");
		}
		System.out.print(" ]");
		time2=System.nanoTime();
		
		long timeElapsed= time2-time1;
		long nanoSecondsElapsed = timeElapsed;
		long milliSecondsElapsed = nanoSecondsElapsed/1000000;
		
		System.out.println();
		System.out.println("Time Elapsed:"+ nanoSecondsElapsed +" or "+milliSecondsElapsed+" milliSeconds");
	}

}
